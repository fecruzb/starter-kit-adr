{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/fecruzb/codes/andre/components/BoxInputs.jsx\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { Box, Button, Grid, TextField } from \"@material-ui/core\";\nexport default (function (_ref) {\n  var changeState = _ref.changeState,\n      state = _ref.state;\n\n  var _React$useState = React.useState({\n    field1: \"\"\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      input = _React$useState2[0],\n      setInput = _React$useState2[1];\n\n  return __jsx(Box, {\n    mt: 2,\n    p: 2,\n    bgcolor: \"grey.200\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 5\n    }\n  }, __jsx(Grid, {\n    container: true,\n    alignItems: \"center\",\n    spacing: 2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }\n  }, __jsx(TextField, {\n    fullWidth: true,\n    name: \"field1\",\n    variant: \"outlined\",\n    value: input.field1,\n    onChange: function onChange(event) {\n      return setInput(_objectSpread({}, input, {\n        field1: event.target.value\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 11\n    }\n  })), __jsx(Grid, {\n    item: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, __jsx(Button, {\n    disabled: !!state,\n    color: \"secondary\",\n    variant: \"contained\",\n    onClick: function onClick() {\n      setInput({\n        field1: \"\"\n      });\n      changeState(null);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 11\n    }\n  }, \"CLEAR\")), __jsx(Grid, {\n    item: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, __jsx(Button, {\n    color: \"primary\",\n    variant: \"contained\",\n    onClick: function onClick() {\n      return changeState(input);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }, \"Submit\"))));\n});","map":{"version":3,"sources":["/Users/fecruzb/codes/andre/components/BoxInputs.jsx"],"names":["Box","Button","Grid","TextField","changeState","state","React","useState","field1","input","setInput","event","target","value"],"mappings":";;;;;;;;;;;;;AAAA,SAASA,GAAT,EAAcC,MAAd,EAAsBC,IAAtB,EAA4BC,SAA5B,QAA6C,mBAA7C;AAEA,gBAAe,gBAA4B;AAAA,MAAzBC,WAAyB,QAAzBA,WAAyB;AAAA,MAAZC,KAAY,QAAZA,KAAY;;AAAA,wBACfC,KAAK,CAACC,QAAN,CAAe;AACvCC,IAAAA,MAAM,EAAE;AAD+B,GAAf,CADe;AAAA;AAAA,MAClCC,KADkC;AAAA,MAC3BC,QAD2B;;AAIzC,SACE,MAAC,GAAD;AAAK,IAAA,EAAE,EAAE,CAAT;AAAY,IAAA,CAAC,EAAE,CAAf;AAAkB,IAAA,OAAO,EAAC,UAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,UAAU,EAAC,QAA3B;AAAoC,IAAA,OAAO,EAAE,CAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD;AACE,IAAA,SAAS,MADX;AAEE,IAAA,IAAI,EAAC,QAFP;AAGE,IAAA,OAAO,EAAC,UAHV;AAIE,IAAA,KAAK,EAAED,KAAK,CAACD,MAJf;AAKE,IAAA,QAAQ,EAAE,kBAACG,KAAD;AAAA,aACRD,QAAQ,mBAAMD,KAAN;AAAaD,QAAAA,MAAM,EAAEG,KAAK,CAACC,MAAN,CAAaC;AAAlC,SADA;AAAA,KALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAYE,MAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AACE,IAAA,QAAQ,EAAE,CAAC,CAACR,KADd;AAEE,IAAA,KAAK,EAAC,WAFR;AAGE,IAAA,OAAO,EAAC,WAHV;AAIE,IAAA,OAAO,EAAE,mBAAM;AACbK,MAAAA,QAAQ,CAAC;AACPF,QAAAA,MAAM,EAAE;AADD,OAAD,CAAR;AAGAJ,MAAAA,WAAW,CAAC,IAAD,CAAX;AACD,KATH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,CAZF,EA2BE,MAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AACE,IAAA,KAAK,EAAC,SADR;AAEE,IAAA,OAAO,EAAC,WAFV;AAGE,IAAA,OAAO,EAAE;AAAA,aAAMA,WAAW,CAACK,KAAD,CAAjB;AAAA,KAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CA3BF,CADF,CADF;AAyCD,CA7CD","sourcesContent":["import { Box, Button, Grid, TextField } from \"@material-ui/core\";\n\nexport default ({ changeState, state }) => {\n  const [input, setInput] = React.useState({\n    field1: \"\",\n  });\n  return (\n    <Box mt={2} p={2} bgcolor=\"grey.200\">\n      <Grid container alignItems=\"center\" spacing={2}>\n        <Grid item xs>\n          <TextField\n            fullWidth\n            name=\"field1\"\n            variant=\"outlined\"\n            value={input.field1}\n            onChange={(event) =>\n              setInput({ ...input, field1: event.target.value })\n            }\n          />\n        </Grid>\n        <Grid item>\n          <Button\n            disabled={!!state}\n            color=\"secondary\"\n            variant=\"contained\"\n            onClick={() => {\n              setInput({\n                field1: \"\",\n              });\n              changeState(null);\n            }}\n          >\n            CLEAR\n          </Button>\n        </Grid>\n        <Grid item>\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={() => changeState(input)}\n          >\n            Submit\n          </Button>\n        </Grid>\n      </Grid>\n    </Box>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}