{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Box, Button, Grid, TextField } from \"@material-ui/core\";\nexport default (({\n  changeState\n}) => {\n  const [input, setInput] = React.useState({\n    field1: \"\"\n  });\n  return __jsx(Box, {\n    mt: 2,\n    p: 2,\n    bgcolor: \"grey.200\"\n  }, __jsx(Grid, {\n    container: true,\n    alignItems: \"center\",\n    spacing: 2\n  }, __jsx(Grid, {\n    item: true,\n    xs: true\n  }, __jsx(TextField, {\n    fullWidth: true,\n    name: \"field1\",\n    variant: \"outlined\",\n    value: input.field1,\n    onChange: event => setInput(_objectSpread({}, input, {\n      field1: event.target.value\n    }))\n  })), __jsx(Grid, {\n    item: true\n  }, __jsx(Button, {\n    color: \"secondary\",\n    variant: \"contained\",\n    onClick: () => {\n      setInput({\n        field1: \"\"\n      });\n      changeState(null);\n    }\n  }, \"CLEAR\")), __jsx(Grid, {\n    item: true\n  }, __jsx(Button, {\n    color: \"primary\",\n    variant: \"contained\",\n    onClick: () => changeState(input)\n  }, \"Submit\"))));\n});","map":null,"metadata":{},"sourceType":"module"}